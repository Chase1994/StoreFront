@model IEnumerable<StoreFront.Models.ShoppingCartProducts>

@{
    ViewBag.Title = "Shopping Cart";
    Layout = "~/Views/Shared/_Layout.cshtml";
    double totalPrice = 0;
    var userName = HttpContext.Current.User.Identity.Name;

}

<h2>@HttpContext.Current.User.Identity.Name's <span class="glyphicon glyphicon-shopping-cart"></span></h2>


<table class="table">
    <tr>
        <th>
            Product
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Quantity)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Products.Price)
        </th>
        <th>
            Subtotal
        </th>
        <th>
        </th>
        <th></th>
    </tr>

@foreach (var item in Model)
{
    <tr id="CartItem-@item.ShoppingCartProductID">
        <td>
            @Html.DisplayFor(modelItem => item.Products.ProductName)
        </td>
        <td>
            @{
                int cartProdID = item.ShoppingCartProductID;
             }
             @Html.TextBox("Quantity-" + item.ShoppingCartProductID, item.Quantity)
             <button type="submit" value="Update" class="btn btn-info btn-group-lg btn_updt" data-assigned-id ="@cartProdID" onclick="UpdateQuantity(this)">Update Cart</button>
        </td>
        <td>
            $@Html.DisplayFor(modelItem => item.Products.Price)
        </td>
        <td id="Subtotal-@item.ShoppingCartProductID">
            @{ 
                var a = Convert.ToDouble(item.Quantity);
                var b = Convert.ToDouble(item.Products.Price);
                var total = a * b;
                total = Math.Round(total, 2);
                totalPrice += total;
            }
            $@total
        </td>
        <td>
            @if (item.Products.ImageFile != null)
            {
                <a href="#"><img src="../../Images/@Url.Content(item.Products.ImageFile)" class="img-responsive" /></a>
            }
        </td>

        <td>
            <button class="btn btn-info btn-group-sm btn_dlt" type="submit" value="Remove" data-assigned-id ="@item.ShoppingCartProductID" onclick="RemoveItem(this)">
                <span class="glyphicon glyphicon-shopping-cart"></span> Remove From Cart
            </button>
        </td>
    </tr>
}

</table>
<div class="container-fluid text-center">
    <h3>Total: $@totalPrice.ToString("0.00")</h3>
    @Html.ActionLink("Place Order", "Address", "PlaceOrder", new { name = userName }, new { @class = "btn btn-primary" })
</div>

<script>

    function UpdateQuantity(elem) {
        var itemID = $(elem).data('assigned-id');
        var quanName = "Quantity-" + itemID;
        var subName = "Subtotal-" + itemID;
        var value = $("[name^=" + quanName + "]").val();
        $.ajax({
            method: "POST",
            data: { cartProdID: itemID, newQuantity: value },
            url: '@Url.Action("Update", "Cart")',

            success: function (data) {
                if (data.newQuantity < 1) {
                    window.alert("Quantity must be greater than 0.");
                }
                else
                {
                    $("[name^=" + quanName + "]").html(data.newQuantity);
                    $("[id^=" + subName + "]").html("$" + data.newSubtotal);
                    $("#cart").html(data.numItems);
                    $("h3").html("Total: $" + data.cartTotal);
                }
                
            }
        })
    }

    function RemoveItem(elem) {
        var itemID = $(elem).data('assigned-id');
        var name = "CartItem-" + itemID;
        $.ajax({
            method: "POST",
            data: {cartItemID: itemID},
            url: '@Url.Action("Delete", "Cart")',

            success: function (data) {
                $("[id^=" + name + "]").fadeOut(325);
                $("#cart").html(data.numItems);
                $("h3").html("Total: $" + data.cartTotal);
            }
        })
    }

</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    @Scripts.Render("~/bundles/js")
}